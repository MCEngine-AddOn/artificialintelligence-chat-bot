plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

// Set project version using a property, defaulting to 'unspecified' if not found
version = project.properties[project.name + '.version'] ?: 'undefined'
group = 'io.github.mcengine'

ext {
    /* User */
    git_user_name = System.getenv('GIT_USER_NAME') ?: 'null'
    git_user_token = System.getenv('GIT_USER_TOKEN') ?: 'null'

    /* Project Information */
    jarName = System.getenv('PROJECT_NAME') ?: 'MCEngine-Chat-Bot'
}

allprojects {
    group = 'io.github.mcengine'

    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
        mavenLocal()

        maven {
            url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots'
            content {
                includeGroup 'org.bukkit'
                includeGroup 'org.spigotmc'
            }
        }

        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://oss.sonatype.org/content/repositories/central' }

        maven {
            url = uri('https://maven.pkg.github.com/MCEngine/mcengine')
            credentials {
                username = project.git_user_name ?: 'null'
                password = project.git_user_token ?: 'null'
            }
        }
        maven {
            url = uri('https://maven.pkg.github.com/MCEngine/artificialintelligence')
            credentials {
                username = project.git_user_name ?: 'null'
                password = project.git_user_token ?: 'null'
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    def versionPropertyKey = project.path.replace(':', '-')
    if (versionPropertyKey.startsWith('-')) {
        versionPropertyKey = versionPropertyKey.substring(1)
    }

    if (!versionPropertyKey.contains('-')) {
        versionPropertyKey = project.name
    }

    versionPropertyKey += '.version'
    version = project.properties[versionPropertyKey] ?: 'undefined'

    tasks.named('jar').configure {
        enabled = false
    }

    tasks.named('shadowJar').configure {
        archiveClassifier = null
    }
}

dependencies {
    implementation project(path: ":mcengine-chat-bot-api", configuration: 'shadow')
    implementation project(path: ":artificialintelligence", configuration: 'shadow')
}

shadowJar {
    version = version
    archiveClassifier = null
    archiveBaseName = project.jarName
}

tasks.named('jar').configure {
    enabled = false
}

build.dependsOn(shadowJar)
